package com.umg.gt.gestionbodega.controller;

import java.sql.Connection;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.util.GenericForwardComposer;

import com.umg.gt.gestionbodega.util.Conf;

public class ControladorBase extends GenericForwardComposer<Component> {
	private static final long serialVersionUID = 1L;
	
	private final String CONN = "PRUEBA"; // Esta variable tendrá valores: PRUEBA, wherever
	
	public void doAfterCompose(Component comp){
		try{
			super.doAfterCompose(comp);
		}catch(Exception e){
			
		}
	}
	
	public String getUsuario(){
		String user = "";
		if(CONN.equals("PRUEBA")){
			desktop.setAttribute("USER", "ottoniel.molina");
			user = "ottoniel.molina";
		}else{
			// Aqui va ir una consulta
			if(desktop.getAttribute("USER") == null){
				user = "";
			}else{
				user = ""; // Aqui la consulta
			}
			
		}
		return user;
	}
	
	public Connection getConLocal() throws Exception {
		Connection conexion = null;
		try {
			conexion = obtenerDataSource(Conf.JNDI_BODEGA).getConnection();
		} catch (NamingException e) {
			e.printStackTrace();
			throw new Exception("Surgio un inconveniente con la fuente de Datos. Recurso: " + Conf.JNDI_BODEGA);
		}
		return conexion;
	}
	
	private DataSource obtenerDataSource(String strJndi) throws NamingException {
		DataSource ret = null;
		if (desktop.getSession().getAttribute("dtsjndi"+strJndi) == null) {
			Context contexto= new InitialContext();
			ret = (DataSource)contexto.lookup("java:comp/env/"+strJndi);
			desktop.getSession().setAttribute("dtsjndi"+strJndi, ret);
			return ret;
		} else {
			return (DataSource) desktop.getSession().getAttribute("dtsjndi"+strJndi);
		}
	}

}
